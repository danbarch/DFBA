git status
Beta_descriptive<-function(a, b, hdiprob =.95){
if(hdiprob > 1 | hdiprob < 0){hdiprob=.95} else{}
if(a <= 0 | b <= 0){
print(" Error. Both a and b must be greater than 0 ; please redo")}
else{
phimean=a/(a+b)
print ("Mean is: ")
print (phimean)
phimedian=qbeta (.5, a, b)
print ("Median is ")
print (phimedian)
if ((a>1)&(b>1)){
phimode=(a-1)/(a+b-2)
print("Mode is: " )
print(phimode)} else {}
print("Probability within interval limits")
print(hdiprob)
qlequal=qbeta((1-hdiprob)/2, a, b)
qhequal=qbeta(hdiprob+((1-hdiprob)/2), a, b)
print("Equal-tail limit values are: ")
print(qlequal)
print(qhequal)
alphaL=seq(0, 1-hdiprob, (1-hdiprob)/1000)
qL=qbeta(alphaL, a ,b)
qH=qbeta(hdiprob+alphaL, a, b)
diff=qH-qL
I=1
mindiff=min(diff)
while(diff[I]>mindiff){
I=I+1
}
qLmin=qL[I]
qHmax=qH[I]
print("Highest density limit values are: ")
print(qLmin)
print(qHmax)
}
}
Beta_descriptive(4, 7)
source("~/dfba/DFBA/R/Beta_descriptive.R", echo=TRUE)
Beta_descriptive<-function(a, b, hdiprob =.95){
if(hdiprob > 1 | hdiprob < 0){hdiprob=.95} else{}
if(a <= 0 | b <= 0){
print(" Error. Both a and b must be greater than 0 ; please redo")}
else{
phimean=a/(a+b)
print ("Mean is: ")
print (phimean)
phimedian=qbeta (.5, a, b)
print ("Median is ")
print (phimedian)
if ((a>1)&(b>1)){
phimode=(a-1)/(a+b-2)
print("Mode is: " )
print(phimode)} else {}
#    print("Probability within interval limits")
#    print(hdiprob)
qlequal=qbeta((1-hdiprob)/2, a, b)
qhequal=qbeta(hdiprob+((1-hdiprob)/2), a, b)
print("Equal-tail limit values are: ")
print(qlequal)
print(qhequal)
alphaL=seq(0, 1-hdiprob, (1-hdiprob)/1000)
qL=qbeta(alphaL, a ,b)
qH=qbeta(hdiprob+alphaL, a, b)
diff=qH-qL
I=1
mindiff=min(diff)
while(diff[I]>mindiff){
I=I+1
}
qLmin=qL[I]
qHmax=qH[I]
print("Highest density limit values are: ")
print(qLmin)
print(qHmax)
}
list("Probability within interval limits"=hdiprob)
}
Beta_descriptive(5, 5)
qH=qbeta(hdiprob+alphaL, a, b)
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
# Function based on code from p. 346
Beta_descriptive<-function(a, b, hdiprob =.95){
if(a <= 0 | b <= 0){
print(" Error. Both a and b must be greater than 0 ; please redo")}
else{
phimean=a/(a+b)
#    print ("Mean is: ")
#    print (phimean)
phimedian=qbeta (.5, a, b)
#    print ("Median is ")
#    print (phimedian)
if ((a>1)&(b>1)){
phimode=(a-1)/(a+b-2)
#      print("Mode is: " )
#      print(phimode)} else {}
#    print("Probability within interval limits")
#    print(hdiprob)
qlequal=qbeta((1-hdiprob)/2, a, b)
qhequal=qbeta(hdiprob+((1-hdiprob)/2), a, b)
print("Equal-tail limit values are: ")
print(qlequal)
print(qhequal)
alphaL=seq(0, 1-hdiprob, (1-hdiprob)/1000)
qL=qbeta(alphaL, a ,b)
qH=qbeta(hdiprob+alphaL, a, b)
diff=qH-qL
I=1
mindiff=min(diff)
while(diff[I]>mindiff){
I=I+1
}
qLmin=qL[I]
qHmax=qH[I]
print("Highest density limit values are: ")
print(qLmin)
print(qHmax)
}
list(Mean = phimean,
Median = phimedian,
mode = phimode,
"Probability within interval limits"=hdiprob)
}
Beta_descriptive(5, 5)
Beta_descriptive<-function(a, b, hdiprob =.95){
if(hdiprob > 1 | hdiprob < 0){hdiprob=.95} else{}
if(a <= 0 | b <= 0){
print(" Error. Both a and b must be greater than 0 ; please redo")}
else{
phimean=a/(a+b)
#    print ("Mean is: ")
#    print (phimean)
phimedian=qbeta (.5, a, b)
#    print ("Median is ")
#    print (phimedian)
if ((a>1)&(b>1)){
phimode=(a-1)/(a+b-2)
print("Mode is: " )
print(phimode)} else {}
#    print("Probability within interval limits")
#    print(hdiprob)
qlequal=qbeta((1-hdiprob)/2, a, b)
qhequal=qbeta(hdiprob+((1-hdiprob)/2), a, b)
print("Equal-tail limit values are: ")
print(qlequal)
print(qhequal)
alphaL=seq(0, 1-hdiprob, (1-hdiprob)/1000)
qL=qbeta(alphaL, a ,b)
qH=qbeta(hdiprob+alphaL, a, b)
diff=qH-qL
I=1
mindiff=min(diff)
while(diff[I]>mindiff){
I=I+1
}
qLmin=qL[I]
qHmax=qH[I]
print("Highest density limit values are: ")
print(qLmin)
print(qHmax)
}
list(Mean = phimean,
Median = phimedian,
mode = phimode,
"Probability within interval limits"=hdiprob)
}
Beta_descriptive(5, 5)
Beta_descriptive<-function(a, b, hdiprob =.95){
Beta_descriptive<-function(a, b, hdiprob =.95){
Beta_descriptive<-function(a, b, hdiprob =.95){
Beta_descriptive<-function(a, b, hdiprob =.95){
if(hdiprob > 1 | hdiprob < 0){hdiprob=.95} else{}
if(a <= 0 | b <= 0){
print(" Error. Both a and b must be greater than 0 ; please redo")}
else{
phimean=a/(a+b)
#    print ("Mean is: ")
#    print (phimean)
phimedian=qbeta (.5, a, b)
#    print ("Median is ")
#    print (phimedian)
if ((a>1)&(b>1)){
phimode=(a-1)/(a+b-2)
#      print("Mode is: " )
#      print(phimode)
}
else {}
#    print("Probability within interval limits")
#    print(hdiprob)
qlequal=qbeta((1-hdiprob)/2, a, b)
qhequal=qbeta(hdiprob+((1-hdiprob)/2), a, b)
#    print("Equal-tail limit values are: ")
#    print(qlequal)
#    print(qhequal)
alphaL=seq(0, 1-hdiprob, (1-hdiprob)/1000)
qL=qbeta(alphaL, a ,b)
qH=qbeta(hdiprob+alphaL, a, b)
diff=qH-qL
I=1
mindiff=min(diff)
while(diff[I]>mindiff){
I=I+1
}
qLmin=qL[I]
qHmax=qH[I]
#    print("Highest density limit values are: ")
#    print(qLmin)
#    print(qHmax)
}
list(Mean = phimean,
Median = phimedian,
mode = phimode,
"Equal-tail limit values" = c(qlequal, qhequal),
"Probability within interval limits"=hdiprob,
"Highest density limit values" = c(qLmin, qHmax))
}
Beta_descriptive(5,5)
Beta_descriptive<-function(a, b, hdiprob =.95){
if(hdiprob > 1 | hdiprob < 0){hdiprob=.95} else{}
if(a <= 0 | b <= 0){
print(" Error. Both a and b must be greater than 0 ; please redo")}
else{
phimean=a/(a+b)
#    print ("Mean is: ")
#    print (phimean)
phimedian=qbeta (.5, a, b)
#    print ("Median is ")
#    print (phimedian)
if ((a>1)&(b>1)){
phimode=(a-1)/(a+b-2)
#      print("Mode is: " )
#      print(phimode)
}
else {}
#    print("Probability within interval limits")
#    print(hdiprob)
qlequal=qbeta((1-hdiprob)/2, a, b)
qhequal=qbeta(hdiprob+((1-hdiprob)/2), a, b)
#    print("Equal-tail limit values are: ")
#    print(qlequal)
#    print(qhequal)
alphaL=seq(0, 1-hdiprob, (1-hdiprob)/1000)
qL=qbeta(alphaL, a ,b)
qH=qbeta(hdiprob+alphaL, a, b)
diff=qH-qL
I=1
mindiff=min(diff)
while(diff[I]>mindiff){
I=I+1
}
qLmin=qL[I]
qHmax=qH[I]
#    print("Highest density limit values are: ")
#    print(qLmin)
#    print(qHmax)
}
list(Mean = phimean,
Median = phimedian,
mode = phimode,
"Equal-tail limit values" = c(qlequal, qhequal),
"Probability within interval limits"=hdiprob,
"Highest density limit values" = c(qLmin, qHmax))
}
Beta_descriptive(5, 5)
Vec_to_table<-function(x, y, quantiles_x, quantiles_y){
x_cut<-cut(x, quantiles_x)
y_cut<-cut(y, quantiles_y)
return(table(x_cut, y_cut))
}
Table_to_vec<-function(table){
x<-rep(1:nrow(table), unname(rowSums(table)))
y<-rep(as.vector(t(col(samp_table2))), as.vector(t(samp_table2)))
list(x=x,
y=y)
}
4.54*(2/3)
3.03/(3.03+4.6)
4.54/(4.54+4.6)
